name: "Publish all"

on: workflow_dispatch

jobs:
  test:
    name: Run all tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract node version from package.json
        uses: sergeysova/jq-action@v2
        id: node_version
        with:
          cmd: jq .engines.node package.json -r | sed -e 's/"//g' | sed -e 's/>=//g'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ steps.node_version.outputs.value }}"
      - name: Use Yarn
        run: corepack enable
      - name: Install deps
        run: yarn
      - name: Prepare
        run: yarn nx run-many --target=prepare --parallel --all
      - name: Run all tests
        run: yarn run test/all
      - name: Coverage
        run: yarn run test/coverage/all
        if: always()
        env:
          CODECOV_TOKEN: ${{ secrets.CODE_COV_TOKEN }}

  deploy:
    name: Package and Publish all apps
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract node version from package.json
        uses: sergeysova/jq-action@v2
        id: node_version
        with:
          cmd: jq .engines.node package.json -r | sed -e 's/"//g' | sed -e 's/>=//g'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ steps.node_version.outputs.value }}"
      - name: Use Yarn
        run: corepack enable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install deps
        run: yarn
      - name: Prepare
        run: yarn nx run-many --target=prepare --parallel --all
      - name: Publish all apps
        run: yarn nx run-many --target=publish --parallel --all --exclude=backups
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
